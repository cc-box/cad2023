<h1>About</h1>
<p><a href="https://github.com/cc-box/cad2023">https://github.com/cc-box/cad2023</a></p>
<p>小組網站連結</p>
<p><a href="https://41123112.github.io/cad2023_ag4/content/index.html">https://41123112.github.io/cad2023_ag4/content/index.html</a></p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<h1>專案1 磁力吸引</h1>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41123117_nfu_edu_tw/EXXJT0hK91tBjhdecEIo5WoBxyqO-8Pm6M3BiWMmjrj2wQ?e=P9rb01">全部零件</a></p>
<p>繪圖過程</p>
<p><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_creo10" height="630" muted="true" width="1008">
<source src="./../downloads/%E7%B9%AA%E5%9C%96%E9%81%8E%E7%A8%8B.mp4" type="video/mp4"/></video></p>
<p>磁力吸引成功  但圖檔跟感測器還須修改</p>
<p><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_creo10" height="630" muted="true" width="1008">
<source src="./../downloads/1111.mp4" type="video/mp4"/></video></p><h1>座位表程式</h1>
<h2>程式碼</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># Brython code starts
from browser import document, html

# get output html location
brython_div = document["brython_div1"]
brython_div &lt;= html.P(id="output_table")

# Replace this line with the actual file content
file_content = open("https://mde.tw/cadnote/downloads/2a_w12_seat.txt").read()

# Create a dictionary to store student numbers and seat numbers
seat_map = {}

# Process each line of the file content
for line in file_content.splitlines():
    # Split each line using tabs
    elements = line.split("\t")

    # If the line contains seat information
    if len(elements) == 2 and "(" in elements[1]:
        # Extract student number and seat information
        stud_num = elements[0].strip()
        seat_info = elements[1].strip()

        # Add student number and seat information to the dictionary
        seat_map[stud_num] = seat_info

# Find the maximum row and column values
max_row = max(int(seat_info[1]) for seat_info in seat_map.values())
max_col = max(int(seat_info[3]) for seat_info in seat_map.values())

# Initialize a 2D list to represent the seating arrangement
seating_arrangement = [["缺席👎"] * max_col for _ in range(max_row)]

# Populate the seating arrangement with student information
for stud_num, seat_info in seat_map.items():
    row = int(seat_info[1]) - 1
    col = int(seat_info[3]) - 1
    seating_arrangement[row][col] = f"座號: {seat_info}, 學號: {stud_num}"

# Display the result in the HTML document
result_html = "&lt;table&gt;"
for row in seating_arrangement:
    result_html += "&lt;tr&gt;"
    for cell_content in row:
        result_html += f"&lt;td&gt;{cell_content}&lt;/td&gt;"
    result_html += "&lt;/tr&gt;"
result_html += "&lt;/table&gt;"

# Update the HTML content with the result
document["output_table"].html = result_html
# Brython code ends
</pre>
<h2>程式示範網頁</h2>
<p><a href="https://41123112.github.io/cad2023_ag4/content/Brython.html?src=https://gist.githubusercontent.com/cc-box/b073eb0b45b07d1eeac01de8a7d86c4a/raw/d74772bd1f448f5be45df87ab723f31b78ee2624/gistfile1.txt">連結</a></p>
<h2>座位表成果</h2>
<div id="brython_div1">
<table>
<tbody>
<tr>
<td>座號: (1,1), 學號: 41123123</td>
<td>座號: (1,2), 學號: 41123119</td>
<td>座號: (1,3), 學號: 41123105</td>
<td>座號: (1,4), 學號: 41123152</td>
<td>座號: (1,5), 學號: 41123120</td>
<td>座號: (1,6), 學號: 41123108</td>
<td>座號: (1,7), 學號: 41123145</td>
<td>座號: (1,8), 學號: 41123137</td>
<td>座號: (1,9), 學號: 41123130</td>
</tr>
<tr>
<td>座號: (2,1), 學號: 41123140</td>
<td>座號: (2,2), 學號: 41123150</td>
<td>座號: (2,3), 學號: 41123124</td>
<td>缺席👎</td>
<td>座號: (2,5), 學號: 41136123</td>
<td>座號: (2,6), 學號: 41123148</td>
<td>座號: (2,7), 學號: 41123116</td>
<td>座號: (2,8), 學號: 41123146</td>
<td>缺席👎</td>
</tr>
<tr>
<td>座號: (3,1), 學號: 41123139</td>
<td>座號: (3,2), 學號: 41123131</td>
<td>座號: (3,3), 學號: 41123135</td>
<td>座號: (3,4), 學號: 41123149</td>
<td>座號: (3,5), 學號: 41123122</td>
<td>座號: (3,6), 學號: 41123134</td>
<td>座號: (3,7), 學號: 41123107</td>
<td>座號: (3,8), 學號: 41123101</td>
<td>座號: (3,9), 學號: 41123102</td>
</tr>
<tr>
<td>座號: (4,1), 學號: 41123128</td>
<td>座號: (4,2), 學號: 41123117</td>
<td>座號: (4,3), 學號: 41123114</td>
<td>座號: (4,4), 學號: 41123126</td>
<td>座號: (4,5), 學號: 41123115</td>
<td>座號: (4,6), 學號: 41123111</td>
<td>缺席👎</td>
<td>座號: (4,8), 學號: 41123112</td>
<td>缺席👎</td>
</tr>
<tr>
<td>座號: (5,1), 學號: 41123144</td>
<td>座號: (5,2), 學號: 41123141</td>
<td>座號: (5,3), 學號: 41123143</td>
<td>座號: (5,4), 學號: 41123129</td>
<td>缺席👎</td>
<td>缺席👎</td>
<td>座號: (5,7), 學號: 41023134</td>
<td>座號: (5,8), 學號: 41023156</td>
<td>座號: (5,9), 學號: 41023155</td>
</tr>
<tr>
<td>座號: (6,1), 學號: 40923118</td>
<td>座號: (6,2), 學號: 41123154</td>
<td>座號: (6,3), 學號: 41123153</td>
<td>缺席👎</td>
<td>座號: (6,5), 學號: 41023245</td>
<td>座號: (6,6), 學號: 41023246</td>
<td>缺席👎</td>
<td>座號: (6,8), 學號: 40923127</td>
<td>座號: (6,9), 學號: 40923213</td>
</tr>
</tbody>
</table>
</div>
<h1>安裝繪圖套件</h1>
<h2>cero</h2>
<p><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_creo10" height="630" muted="true" width="1008">
<source src="./../downloads/123456.mp4" type="video/mp4"/></video></p>
<h2>SOLIDWORKS</h2>
<p><video __idm_id__="2007041" autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_creo10" height="630" muted="true" width="1008">
<source src="./../downloads/SOLIDWORKS%202022%20%E5%AE%89%E8%A3%9D%E9%81%8E%E7%A8%8B_tvai.mp4"/></video></p>
<div id="gtx-trans" style="position: absolute; left: 59px; top: -14.3125px;">
<div class="gtx-trans-icon"></div>
</div>
<h1>hw</h1>
<h2>Replit</h2>
<p>影片示範</p>
<p><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_creo10" height="630" muted="true" width="1008">
<source src="./../downloads/示範.mp4" type="video/mp4"/></video></p>
<h2>s1511</h2>
<h2>localhost</h2>
<h1>w13</h1>
<h1>exam</h1>
<h2>step1</h2>
<p><span>基本零組件設計繪圖</span></p>
<p><span></span></p>
<p><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_creo10" height="630" muted="true" width="1008">
<source src="./../downloads/step1.mp4" type="video/mp4"/></video></p>
<h2>step2</h2>
<h2>step3</h2>
<h2>step4</h2>
<h2>step5</h2>
<p><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_creo10" height="630" muted="true" width="1008">
<source src="./../downloads/1234564.mp4" type="video/mp4"/></video></p><h2>step6</h2>
<h1>自我評分</h1>
<p><span>自評分數：60</span></p>
<p><span>每周都有為小組以其個人網站加入點修改，會使用s1511、replit更新網站</span></p>
<p><span>A: 是否按照進度明確標示倉儲的改版歷程</span></p>
<p>答:是</p>
<p><span>B: 是否根據<span> </span><span>IPv4 與 IPv6</span><span> </span>網路環境設定進行作法討論</span></p>
<p><span>答:是</span></p>
<p><span>C: 是否就<span><span> </span>Replit、s.cycu.org 與 localhost</span><span> </span>情境下對個人與分組倉儲進行設定操作</span></p>
<p><span>答:是(使用Replit、s1511.cycu.org 成功)</span></p>
<p><span>D: 是否就所分配的<span> </span><span>CAD 套件</span>從安裝設定到繪圖提供內容參考</span></p>
<p><span>答:是(使用SOLIDWORKS、cero)</span></p>
<p><span>E: 是否使用所分配的 CAD 套件完成<span>專案一零組件繪圖</span>, 並提供零組件下載</span></p>
<p><span>答:是</span></p>
<p><span>F: 是否將自行繪製的專案一零組件<span>轉入 CoppeliaSim</span></span></p>
<p><span><span>答:是</span></span></p>
<p><span>G: 是否利用<span> </span><span>ZMQ Remote API Python</span><span> </span>對專案一轉入的零組件設定感測器, 並進行<span>鋼球永動模擬</span></span></p>
<p><span><span>答:是</span></span></p>
<p><span>H: 是否實際操作<span> </span><span>Triangle 軌道系統</span>的鋼球永動模擬</span></p>
<p><span>答:是</span></p>
<p><span>I: 是否完成 W15 的平面雙 U 迴路上的<span>鋼球永動系統繪圖、轉檔與系統模擬</span></span></p>
<p><span><span>答:(完成step1)</span></span></p>
<p><span>J: 是否使用所分配的 CAD 套件完成<span>專案二 1D 平台零組件繪圖</span>, 並提供零組件下載</span></p>
<p><span>答:還未</span></p>
<p><span>K: 是否利用<span> </span><span>ZMQ Remote API Python</span><span> </span>對專案二轉入的零組件設定感測器, 並進行鋼球永動模擬</span></p>
<p><span>答:還未</span></p>
<p><span>L: 是否針對專案二的 1D 平台鋼球平衡系統所需的<span> </span><span>PID 控制理論</span>進行資料收集與 ChatGPT 對答</span></p>
<p><span>答:還未</span></p>
<hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>